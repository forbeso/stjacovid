# -*- coding: utf-8 -*-
"""Jamaica Covid-19 Cases By Parish.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/forbeso/JaCovid/blob/develop/Jamaica_Covid_19_Cases_By_Parish.ipynb
"""
import streamlit as st
import streamlit_folium as st_folium
import pandas as pd
import folium
from folium import FeatureGroup, LayerControl, Map, Marker, Choropleth, ColorMap
import json
import os
import pathlib as pl
import urllib.request, json
import requests
from folium.plugins import MarkerCluster
import re
import numpy as np


def data_clean():
    url = "https://admin.jamcovid19.moh.gov.jm/public/api/statistics?type=1"

    r = requests.get(url)
    dictr = r.json()
    recs = dictr["data"]["parishes_wise_report"]
    df = pd.json_normalize(recs)
    # print(df)

    frame = pd.DataFrame(data=df)

    # select columns needed
    ParishData = frame.loc[
        :,
        [
            "parish",
            "total_tests_positive",
            "number_of_deaths",
            "number_of_people_recovered",
        ],
    ]

    # rename columns
    ParishData.rename(
        columns={
            "parish": "Parish",
            "total_tests_positive": "Confirmed",
            "number_of_deaths": "Deaths",
            "number_of_people_recovered": "Recoveries",
        },
        inplace=True,
    )
    # ParishData

    ParishData_new = ParishData
    ParishData_new.at[0, "Parish"] = "Hanover"
    ParishData_new.at[1, "Parish"] = "St. Elizabeth"
    ParishData_new.at[2, "Parish"] = "St. James"
    ParishData_new.at[7, "Parish"] = "St. Ann"
    ParishData_new.at[8, "Parish"] = "St. Catherine"
    ParishData_new.at[9, "Parish"] = "St. Mary"
    ParishData_new.at[11, "Parish"] = "St. Andrew"
    ParishData_new.at[12, "Parish"] = "St. Thomas"
    # ParishData_new = pd.DataFrame({'Parish':['Hanover','St. Elizabeth','St. James','Trelawny','Westmoreland','Clarendon','Manchester','St. Ann','St. Catherine','St. Mary','Portland','St. Andrew','St. Thomas']})

    st.header("COVID-19 Confirmed, Recoveries and Deaths by Parish ðŸ˜·")
    ParishData_new

    st.subheader("Map showing spread of covid-19 across Jamaica's parishes")
    # use folium to get Jamaica's Map
    jamaica = folium.Map(
        location=[18.1096, -77.2975], zoom_start=9, tiles="Stamen Terrain"
    )

    # ParishData_new.dtypes

    # change data types
    ParishData_new["Parish"] = ParishData_new["Parish"].astype(str)

    ParishData_new["Confirmed"] = pd.to_numeric(ParishData_new["Confirmed"])
    ParishData_new["Recoveries"] = pd.to_numeric(ParishData_new["Recoveries"])
    ParishData_new["Deaths"] = pd.to_numeric(ParishData_new["Deaths"])

    # ParishData_new.dtypes

    # get geojosn file with Jamaica's Parishes/Boundaries
    geojson_file = "JMParishes.json"
    with open(geojson_file) as f:
        jamaica_geo = json.load(f)

    for j in range(13):
        for i in range(len(ParishData_new["Parish"])):
            if (jamaica_geo["features"][j]["properties"]["PARISH"]) == (
                ParishData_new["Parish"][i]
            ):
                jamaica_geo["features"][j]["properties"]["Confirmed"] = ParishData_new[
                    "Confirmed"
                ][i]
                jamaica_geo["features"][j]["properties"]["Recoveries"] = ParishData_new[
                    "Recoveries"
                ][i]
                jamaica_geo["features"][j]["properties"]["Deaths"] = ParishData_new[
                    "Deaths"
                ][i]
        # print(jamaica_geo["features"][j]["properties"])

    # CONVERT FROM NUMPY INT64 TO REGULAR INT
    for x in range(13):
        jamaica_geo["features"][x]["properties"]["Confirmed"] = int(
            jamaica_geo["features"][x]["properties"]["Confirmed"]
        )
        jamaica_geo["features"][x]["properties"]["Recoveries"] = int(
            jamaica_geo["features"][x]["properties"]["Recoveries"]
        )
        jamaica_geo["features"][x]["properties"]["Deaths"] = int(
            jamaica_geo["features"][x]["properties"]["Deaths"]
        )

    # print(type(jamaica_geo["features"][0]["properties"]["Deaths"]))

    # create Choropleth Map of Jamaica
    choro = Choropleth(
        geo_data=jamaica_geo,
        data=ParishData_new,
        name="choro",
        columns=["Parish", "Confirmed"],
        key_on="feature.properties.PARISH",
        fill_color="YlOrRd",
        fill_opacity=0.9,
        legend_name="Confirmed Corona Virus Cases by Parish",
        reset=True,
    ).add_to(jamaica)

    choro.geojson.add_child(
        folium.features.GeoJsonTooltip(
            fields=["PARISH", "Confirmed", "Deaths", "Recoveries"], labels=True
        )
    )

    epi = ParishData_new.iloc[8]["Confirmed"]
    info = str(epi) + " Cases"
    # print(info)

    jm = (
        folium.CircleMarker(
            location=[18.1096, -77],
            radius=20,
            fill=True,
        )
        .add_child(folium.Popup(info))
        .add_to(jamaica)
    )

    swt = st_folium.folium_static(jamaica, width=725)


data_clean()
# ParishData_new.dtypes
